{"ast":null,"code":"/* eslint-env browser */\nexport const insertRuleIntoDevtools = (selector, block) => {\n  // start after the . combinator and cut at the first : if there is one to cut out the pseudo classes\n  const key = selector.substring(1, selector.indexOf(\":\") !== -1 ? selector.indexOf(\":\") : selector.length);\n  const styles = {}; // split the declaration to catch vendor prefixing\n\n  for (const decl of block.split(\";\")) {\n    if (decl.trim() !== \"\" && !window.__STYLETRON_DEVTOOLS__.atomicMap[key]) styles[decl.substring(0, decl.indexOf(\":\"))] = decl.substring(decl.indexOf(\":\") + 1, decl.length);\n  }\n\n  window.__STYLETRON_DEVTOOLS__.atomicMap[key] = styles;\n};\nexport const hydrateDevtoolsRule = cssString => {\n  const id = cssString.substring(0, 3);\n  const block = cssString.substring(4, cssString.length - 1);\n  insertRuleIntoDevtools(id, block);\n};","map":{"version":3,"sources":["src/dev-tool.ts"],"names":["insertRuleIntoDevtools","key","selector","styles","block","decl","window","hydrateDevtoolsRule","cssString","id"],"mappings":"AAAA;AACA,OAAO,MAAMA,sBAAsB,GAAG,CAAA,QAAA,EAAA,KAAA,KAAqB;EACzD;EACA,MAAMC,GAAG,GAAGC,QAAQ,CAARA,SAAAA,CAAAA,CAAAA,EAEVA,QAAQ,CAARA,OAAAA,CAAAA,GAAAA,MAA0B,CAA1BA,CAAAA,GAA+BA,QAAQ,CAARA,OAAAA,CAA/BA,GAA+BA,CAA/BA,GAAuDA,QAAQ,CAFjE,MAAYA,CAAZ;EAIA,MAAMC,MAAM,GAN6C,EAMzD,CANyD,CAOzD;;EACA,KAAK,MAAL,IAAA,IAAmBC,KAAK,CAALA,KAAAA,CAAnB,GAAmBA,CAAnB,EAAqC;IACnC,IAAIC,IAAI,CAAJA,IAAAA,OAAAA,EAAAA,IAAsB,CAACC,MAAM,CAANA,sBAAAA,CAAAA,SAAAA,CAA3B,GAA2BA,CAA3B,EACEH,MAAM,CAACE,IAAI,CAAJA,SAAAA,CAAAA,CAAAA,EAAkBA,IAAI,CAAJA,OAAAA,CAAzBF,GAAyBE,CAAlBA,CAAD,CAANF,GAA+CE,IAAI,CAAJA,SAAAA,CAC7CA,IAAI,CAAJA,OAAAA,CAAAA,GAAAA,IAD6CA,CAAAA,EAE7CA,IAAI,CAFNF,MAA+CE,CAA/CF;EAIH;;EAEDG,MAAM,CAANA,sBAAAA,CAAAA,SAAAA,CAAAA,GAAAA,IAAAA,MAAAA;AAhBK,CAAA;AAmBP,OAAO,MAAMC,mBAAmB,GAAGC,SAAS,IAAI;EAC9C,MAAMC,EAAE,GAAGD,SAAS,CAATA,SAAAA,CAAAA,CAAAA,EAAX,CAAWA,CAAX;EACA,MAAMJ,KAAK,GAAGI,SAAS,CAATA,SAAAA,CAAAA,CAAAA,EAAuBA,SAAS,CAATA,MAAAA,GAArC,CAAcA,CAAd;EACAR,sBAAsB,CAAA,EAAA,EAAtBA,KAAsB,CAAtBA;AAHK,CAAA","sourcesContent":["/* eslint-env browser */\nexport const insertRuleIntoDevtools = (selector, block) => {\n  // start after the . combinator and cut at the first : if there is one to cut out the pseudo classes\n  const key = selector.substring(\n    1,\n    selector.indexOf(\":\") !== -1 ? selector.indexOf(\":\") : selector.length,\n  );\n  const styles = {};\n  // split the declaration to catch vendor prefixing\n  for (const decl of block.split(\";\")) {\n    if (decl.trim() !== \"\" && !window.__STYLETRON_DEVTOOLS__.atomicMap[key])\n      styles[decl.substring(0, decl.indexOf(\":\"))] = decl.substring(\n        decl.indexOf(\":\") + 1,\n        decl.length,\n      );\n  }\n\n  window.__STYLETRON_DEVTOOLS__.atomicMap[key] = styles;\n};\n\nexport const hydrateDevtoolsRule = cssString => {\n  const id = cssString.substring(0, 3);\n  const block = cssString.substring(4, cssString.length - 1);\n  insertRuleIntoDevtools(id, block);\n};\n"]},"metadata":{},"sourceType":"module"}